{"version":3,"sources":["theme.js","components/Header.js","components/PlayerList.js","components/Button.js","components/PlayerForm.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["theme","createTheme","palette","primary","main","secondary","text","typography","fontFamily","join","button","letterSpacing","responsiveFontSizes","useStyles","makeStyles","root","flexGrow","title","textAlign","padding","spacing","color","fontWeight","Header","classes","Grid","item","className","AppBar","position","Typography","variant","listContainer","paddingBottom","paddingTop","listItem","backgroundColor","border","borderRadius","PlayerList","players","activeId","activateScoreInput","keyUp","deletePlayer","updateScore","newScore","scoreDisplay","player","id","style","score","TextField","type","value","onKeyUp","onChange","e","paddingLeft","size","onClick","map","xs","md","List","ListItem","ListItemIcon","ListItemText","name","marginTop","marginBottom","minHeight","minWidth","breakpoints","down","CustomButton","fullWidth","elevated","Button","disableElevation","container","width","margin","PlayerForm","setName","setScore","savePlayer","label","target","length","footer","top","bottom","buttonContainer","Footer","addAction","addPlayer","playerCount","clearBoard","Toolbar","titleContainer","App","useState","setPlayers","setAddAction","setNewScore","setActiveId","undefined","timeoutId","setTimeoutId","cleanInputs","direction","justifyContent","alignItems","clearTimeout","scoreToInt","parseInt","setTimeout","updatedPlayers","p","isNaN","filter","trim","newPlayer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.f87065d3.chunk.js","sourcesContent":["import { createTheme, responsiveFontSizes } from '@material-ui/core/styles';\n\n// default theme\n// https://mui.com/customization/default-theme/#heading-explore\n\nlet theme = createTheme({\n    palette: {\n        primary: {\n            main: '#00acc1',\n        },\n        secondary: {\n            main: '#f48fb1',\n        },\n        text: {\n            // primary: '#fff'\n        },\n    },\n    typography: {\n        fontFamily: [\"Roboto\"].join(','),\n        button: {\n            letterSpacing: '0.09rem',\n        },\n    },\n});\n\nexport default responsiveFontSizes(theme);","import { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    title: {\n        textAlign: 'center',\n        padding: theme.spacing(2),\n        color: '#fff',\n        fontWeight: '500',\n        letterSpacing: '0.2rem'\n    }\n}))\n\nfunction Header() {\n    const classes = useStyles();\n\n    return (\n        <Grid item className={classes.root}>\n            <AppBar position=\"static\">\n                <Typography variant=\"h2\" className={classes.title}>\n                    Scoreboard\n                </Typography>\n            </AppBar>\n        </Grid>\n    )\n}\n\nexport default Header;","import { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport DeleteSharpIcon from '@material-ui/icons/DeleteSharp';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n    listContainer: {\n        textAlign: 'center',\n        padding: theme.spacing(2),\n        paddingBottom: theme.spacing(1),\n        paddingTop: theme.spacing(1)\n    },\n    listItem: {\n        backgroundColor: '#fff',\n        border: '1px solid black',\n        padding: theme.spacing(1),\n        borderRadius: '5px'\n    }\n}));\n\nfunction PlayerList({players, activeId, activateScoreInput, keyUp, deletePlayer, updateScore, newScore}) {\n    const classes = useStyles();\n    const scoreDisplay = (player) => {\n        if (activeId === player.id) {\n            return (\n                <span style={{ 'padding': '10px'}}>\n                    {player.score} + \n                    <span>\n                    <TextField\n                        id=\"newscore\"\n                        type=\"number\"\n                        value={newScore}\n                        onKeyUp={() => keyUp()}\n                        onChange={(e) => updateScore(e)}\n                        style={{\n                            paddingLeft: '15px',\n                            paddingTop: '1px'\n                        }}\n                        size=\"small\"\n                    />\n                    </span>\n                </span>\n            )\n        }\n        return <span style={{ 'paddingLeft': '10px'}} onClick={() => activateScoreInput(player)}>{player.score}</span>\n    }\n\n    return players.map((player) => {\n        return (\n            <Grid item xs={12} md={12} key={player.id}>\n                <List className={classes.listContainer}>\n                    <ListItem className={classes.listItem}>\n                        <ListItemIcon>\n                            <DeleteSharpIcon onClick={() => deletePlayer(player)} />\n                        </ListItemIcon>\n                        <ListItemText>\n                            {player.name}\n                            {scoreDisplay(player)}\n                        </ListItemText>\n                    </ListItem>\n                </List>\n            </Grid>\n        )\n    });\n}\n\nexport default PlayerList;","import { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n        minHeight: '50px',\n        minWidth: '160px',\n        [theme.breakpoints.down('390')]: {\n            minWidth: '60px',\n        },\n    }\n}));\n\nfunction CustomButton({title, color, onClick, variant, fullWidth=false, elevated = true}) {\n    const classes = useStyles();\n    return (\n        <Button\n            variant={variant}\n            disableElevation={!elevated}\n            color={color}\n            onClick={onClick}\n            className={classes.button}\n            fullWidth\n        >\n            {title}\n        </Button>\n    )\n}\n\nexport default CustomButton;","import { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport CustomButton from './Button';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        width: '80%',\n        margin: 'auto',\n        padding: theme.spacing(2),\n    },\n}));\n\nfunction PlayerForm({name, setName, setScore, savePlayer}) {\n    const classes = useStyles();\n\n    return (\n        <Grid item className={classes.container}>\n            <TextField\n                id=\"player-name\"\n                label=\"Name\"\n                type=\"text\"\n                fullWidth\n                onChange={e => setName(e.target.value)}\n            />\n            <TextField\n                id=\"player-score\"\n                label=\"Initial score\"\n                type=\"number\"\n                fullWidth\n                onChange={e => setScore(e.target.value)}\n            />\n            <CustomButton\n                variant=\"outlined\"\n                disableElevation\n                onClick={savePlayer}\n                title={name.length === 0 ? 'Cancel' : 'Save'}\n            />\n        </Grid>\n    )\n}\n\nexport default PlayerForm;","import { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport CustomButton from './Button';\n\nconst useStyles = makeStyles((theme) => ({\n    footer: {\n        top: 'auto',\n        bottom: 0,\n        padding: theme.spacing(2),\n        [theme.breakpoints.down('321')]: {\n            padding: theme.spacing(1),\n        },\n    },\n    buttonContainer: {\n        \"& button\": {\n            margin: theme.spacing(1),\n        }\n    }\n}));\n\nfunction Footer({addAction, addPlayer, playerCount, clearBoard}) {\n    const classes = useStyles();\n\n    return (\n        <AppBar position=\"fixed\" className={classes.footer}>\n            <Toolbar className={classes.buttonContainer} style={playerCount > 0 ? { margin: 'auto'} : {}}>\n                {(playerCount > 0 && !addAction)&& (\n                    <CustomButton\n                        variant=\"contained\"\n                        onClick={clearBoard}\n                        title=\"Clear board\"\n                    />\n                )}\n                {!addAction && (\n                    <CustomButton\n                        variant=\"contained\"\n                        color=\"warning\"\n                        onClick={addPlayer}\n                        title=\"Add player\"\n                        fullWidth={playerCount === 0}\n                    />\n                )}\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default Footer;","import { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport './App.css';\nimport Header from './components/Header';\nimport PlayerList from './components/PlayerList';\nimport PlayerForm from './components/PlayerForm';\nimport Footer from './components/Footer';\n// TODO:\n// - theme (better styles)\n// - animation\n// - colored board\nconst useStyles = makeStyles((theme) => ({\n    titleContainer: {\n      textAlign: 'center',\n    }\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [players, setPlayers] = useState([{id: 1, name: 'test', score: 0}]);\n  const [addAction, setAddAction] = useState(false);\n  const [name, setName] = useState('');\n  const [score, setScore] = useState(0);\n  const [newScore, setNewScore] = useState('');\n  const [activeId, setActiveId] = useState(0);\n  const [timeoutId, setTimeoutId] = useState(undefined);\n  const TIMEOUT = 750;\n\n  const cleanInputs = () => {\n    setName('');\n    setScore(0);\n  }\n\n  const addPlayer = () => {\n    setAddAction(true);\n  }\n\n  const savePlayer = () => {\n    setAddAction(false);\n    const temp = name.trim();\n    if (temp.length === 0) {\n      cleanInputs();\n      return\n    }\n    const newPlayer = {\n      id: players.length +1,\n      name: name,\n      score: score,\n    };\n    setPlayers([...players, newPlayer])\n    cleanInputs();\n  }\n\n  const activateScoreInput = (player) => {\n    setActiveId(player.id);\n  }\n\n  const updateScore = (e) => {\n    setNewScore(e.target.value);\n  }\n\n  const deletePlayer = (player) => {\n    const updatedPlayers = players.filter(p => \n      p.id !== player.id\n    )\n    setPlayers(updatedPlayers);\n  }\n\n  const keyUp = () => {\n    if (timeoutId !== undefined) {\n      clearTimeout(timeoutId)\n    }\n    const scoreToInt = parseInt(newScore);\n    let id = setTimeout(() => {\n      setTimeoutId(undefined);\n      const updatedPlayers = players.map(p => \n        p.id === activeId ? \n          { \n            ...p,\n            score: (parseInt(p.score) + (isNaN(scoreToInt) ? 0 : scoreToInt)) }\n          : p\n      );\n      setPlayers(updatedPlayers);\n      setActiveId(0);\n      setNewScore('');\n    }, TIMEOUT);\n    setTimeoutId(id)\n  }\n\n  const clearBoard = () => {\n    setPlayers([]);\n  }\n\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"stretch\"\n    >\n      <Header />\n        {!addAction && (\n          <div>\n            {players.length === 0 && (\n              <Grid item className={classes.titleContainer}>\n                <h2>Begin by adding players!</h2>\n              </Grid>\n            )}\n            <PlayerList\n              players={players}\n              activeId={activeId}\n              activateScoreInput={activateScoreInput}\n              keyUp={keyUp}\n              updateScore={updateScore}\n              newScore={newScore}\n              deletePlayer={deletePlayer}\n            />\n          </div>\n        )}\n        {addAction && (\n          <PlayerForm\n            name={name}\n            setName={setName}\n            setScore={setScore}\n            savePlayer={savePlayer}\n          />\n        )}\n      <Footer\n        addPlayer={addPlayer}\n        addAction={addAction}\n        playerCount={players.length}\n        clearBoard={clearBoard}\n      />\n    </Grid>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\nimport './index.css';\nimport theme from './theme';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}