{"version":3,"sources":["theme.js","components/Header.js","components/PlayerList.js","components/Button.js","constants.js","components/PlayerForm.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["theme","createTheme","palette","primary","main","secondary","text","disabled","action","typography","fontFamily","join","button","letterSpacing","responsiveFontSizes","useStyles","makeStyles","root","flexGrow","title","textAlign","padding","spacing","color","fontWeight","textTransform","Header","classes","Grid","item","className","AppBar","position","Typography","variant","listContainer","paddingBottom","top","itemContainer","paddingTop","listItem","backgroundColor","border","paddingLeft","borderRadius","minHeight","textContainer","nameContainer","display","width","input","maxWidth","scoreContainer","marginLeft","PlayerList","players","activeId","activateScoreInput","keyUp","deletePlayer","updateScore","newScore","scoreDisplay","player","id","score","TextField","type","autoFocus","value","onKeyUp","onChange","e","size","InputProps","onClick","xs","md","map","List","ListItem","style","ListItemIcon","ListItemText","name","marginTop","marginBottom","minWidth","breakpoints","down","CustomButton","fullWidth","elevated","Button","disableElevation","COLOR_BANK","container","margin","lengthDisplay","right","PlayerForm","setName","setScore","savePlayer","label","inputProps","maxLength","target","length","footer","bottom","buttonContainer","Footer","addAction","addPlayer","playerCount","clearBoard","resetScores","Toolbar","Fragment","titleContainer","height","App","useState","setPlayers","setAddAction","setNewScore","setActiveId","undefined","timeoutId","setTimeoutId","colorBank","setColorBank","cleanInputs","setPlayerColor","color_bank","colorIndex","Math","floor","random","splice","direction","justifyContent","alignItems","clearTimeout","scoreToInt","parseInt","setTimeout","updatedPlayers","p","isNaN","filter","trim","newPlayer","resetPlayerScores","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.db512f5f.chunk.js","sourcesContent":["import { createTheme, responsiveFontSizes } from '@material-ui/core/styles';\n\n// default theme\n// https://mui.com/customization/default-theme/#heading-explore\n\nlet theme = createTheme({\n    palette: {\n        primary: {\n            main: '#00acc1',\n        },\n        secondary: {\n            main: '#fff',\n        },\n        text: {\n            // primary: '#fff'\n            disabled: '#757575'\n        },\n        action: {\n        }\n    },\n    typography: {\n        fontFamily: ['sans-serif'].join(','),\n        button: {\n            letterSpacing: '0.09rem',\n        },\n    },\n});\n\nexport default responsiveFontSizes(theme);","import { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    title: {\n        textAlign: 'center',\n        padding: theme.spacing(2),\n        color: '#fff',\n        fontWeight: 'bold',\n        letterSpacing: '0.2rem',\n        textTransform: 'uppercase'\n    }\n}))\n\nfunction Header() {\n    const classes = useStyles();\n\n    return (\n        <Grid item className={classes.root}>\n            <AppBar position=\"fixed\">\n                <Typography variant=\"h2\" className={classes.title}>\n                    Scoreboard\n                </Typography>\n            </AppBar>\n        </Grid>\n    )\n}\n\nexport default Header;","import { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport DeleteSharpIcon from '@material-ui/icons/DeleteSharp';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n    listContainer: {\n        position: 'relative',\n        paddingBottom: '100px',\n        top: '100px'\n    },\n    itemContainer: {\n        textAlign: 'center',\n        padding: theme.spacing(2),\n        paddingBottom: theme.spacing(1),\n        paddingTop: theme.spacing(1),\n        position: 'relative'\n    },\n    listItem: {\n        backgroundColor: '#fff',\n        border: '3px solid',\n        padding: theme.spacing(1),\n        paddingLeft: theme.spacing(4),\n        borderRadius: '5px',\n        minHeight: '60px',\n        fontWeight: 'bold',\n    },\n    textContainer: {\n        minHeight: '40px',\n        padding: '8px 0'\n    },\n    nameContainer: {\n        display: 'inline-block',\n        width: '90px'\n    },\n    input: {\n        padding: '2px 2px',\n        maxWidth: '100px'\n    },\n    scoreContainer: {\n        padding: '10px',\n        marginLeft: '20px',\n        minHeight: '40px',\n    }\n}));\n\nfunction PlayerList({players, activeId, activateScoreInput, keyUp, deletePlayer, updateScore, newScore}) {\n    const classes = useStyles();\n    \n    const scoreDisplay = (player) => {\n        if (activeId === player.id) {\n            return (\n                <span className={classes.scoreContainer}>\n                    {player.score} + \n                    <span>\n                        <TextField\n                            id=\"newscore\"\n                            type=\"number\"\n                            autoFocus\n                            value={newScore}\n                            onKeyUp={() => keyUp()}\n                            onChange={(e) => updateScore(e)}\n                            size=\"small\"\n                            InputProps={{\n                                classes: {\n                                    input: classes.input\n                                }\n                            }}\n                        />\n                    </span>\n                </span>\n            )\n        }\n        return <span className={classes.scoreContainer} onClick={() => activateScoreInput(player)}>{player.score}</span>\n    }\n\n    const renderPlayers = () => {\n        return players.map((player) => {\n            return (\n                <Grid item xs={12} md={12} key={player.id}>\n                    <List className={classes.itemContainer}>\n                        <ListItem className={classes.listItem} style={{ 'borderColor': player.color}}>\n                            <ListItemIcon>\n                                <DeleteSharpIcon onClick={() => deletePlayer(player)} />\n                            </ListItemIcon>\n                            <ListItemText className={classes.textContainer}>\n                                <span className={classes.nameContainer}>\n                                    {player.name}\n                                </span>\n                                {scoreDisplay(player)}\n                            </ListItemText>\n                        </ListItem>\n                    </List>\n                </Grid>\n            )\n        });\n    }\n\n    return (\n        <Grid item xs={12} md={12}\n            className={classes.listContainer}\n        >\n            {renderPlayers()}\n        </Grid>\n    )\n}\n\nexport default PlayerList;","import { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n        minHeight: '50px',\n        minWidth: '50px',\n        color: '#fff',\n        fontWeight: 'bold',\n        borderRadius: '0',\n        [theme.breakpoints.down('390')]: {\n            minWidth: '60px',\n        },\n    }\n}));\n\nfunction CustomButton({title, color=\"primary\", onClick, variant, fullWidth=false, elevated = true, disabled = false}) {\n    const classes = useStyles();\n\n    return (\n        <Button\n            variant={variant}\n            disableElevation={!elevated}\n            color={color}\n            style={{\n                color: color === 'secondary' ? '#fff' : '#004750'\n            }}\n            onClick={onClick}\n            className={classes.button}\n            fullWidth\n            disabled={disabled}\n        >\n            {title}\n        </Button>\n    )\n}\n\nexport default CustomButton;","export const MAX_PLAYERS = 12;\nexport const MAX_NAME_LENGTH = 12;\nexport const COLOR_BANK = [\n    '#060075',\n    '#007540',\n    '#752200',\n    '#750175',\n    '#0191B8',\n    '#B80000',\n    '#F59C00',\n    '#F500A0',\n    '#91D0F5',\n    '#F5D825',\n    '#F59292',\n    '#00F5C7'\n];","import { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport CustomButton from './Button';\n\nimport { MAX_NAME_LENGTH } from '../constants';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        width: '80%',\n        margin: 'auto',\n        position:'relative',\n        top:'100px',\n        padding: theme.spacing(2),\n        \"& *\": {\n            margin: theme.spacing(1),\n        }\n    },\n    lengthDisplay: {\n        position: 'relative',\n        right: '0',\n        textAlign: 'end',\n        margin: '0px',\n    }\n}));\n\nfunction PlayerForm({name, setName, setScore, savePlayer}) {\n    const classes = useStyles();\n    \n    return (\n        <Grid item className={classes.container}>\n            <TextField\n                id=\"player-name\"\n                label=\"Name\"\n                type=\"text\"\n                fullWidth\n                inputProps={{\n                    maxLength: MAX_NAME_LENGTH\n                }}\n                onChange={e => setName(e.target.value)}\n                style={{\n                    marginBottom: '2px'\n                }}\n            />\n            <div className={classes.lengthDisplay}>\n                {MAX_NAME_LENGTH - name.length}\n            </div>\n            <TextField\n                id=\"player-score\"\n                label=\"Initial score\"\n                type=\"number\"\n                fullWidth\n                onChange={e => setScore(e.target.value)}\n            />\n            <CustomButton\n                variant=\"outlined\"\n                disableElevation\n                onClick={savePlayer}\n                title={name.length === 0 ? 'Cancel' : 'Save'}\n            />\n        </Grid>\n    )\n}\n\nexport default PlayerForm;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport CustomButton from './Button';\nimport { MAX_PLAYERS } from '../constants'\n\nconst useStyles = makeStyles((theme) => ({\n    footer: {\n        top: 'auto',\n        bottom: 0,\n        padding: theme.spacing(2),\n        [theme.breakpoints.down('321')]: {\n            padding: theme.spacing(1),\n        },\n        minHeight: '100px'\n    },\n    buttonContainer: {\n        \"& button\": {\n            margin: theme.spacing(1),\n        }\n    }\n}));\n\nfunction Footer({addAction, addPlayer, playerCount, clearBoard, resetScores}) {\n    const classes = useStyles();\n\n    return (\n        <AppBar position=\"fixed\" className={classes.footer}>\n            <Toolbar className={classes.buttonContainer} style={playerCount > 0 ? { margin: 'auto'} : {}}>\n                {(playerCount > 0 && !addAction) && (\n                    <React.Fragment>\n                        <CustomButton\n                            variant=\"outlined\"\n                            onClick={clearBoard}\n                            title=\"Clear board\"\n                            color=\"secondary\"\n                        />\n                        <CustomButton\n                            variant=\"outlined\"\n                            color=\"secondary\"\n                            onClick={resetScores}\n                            title=\"Reset scores\"\n                        />\n                    </React.Fragment>\n                )}\n                {!addAction && (\n                    <CustomButton\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        onClick={addPlayer}\n                        title=\"Add player\"\n                        disabled={playerCount === MAX_PLAYERS}\n                        fullWidth={playerCount === 0}\n                    />\n                )}\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default Footer;","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport './App.css';\nimport Header from './components/Header';\nimport PlayerList from './components/PlayerList';\nimport PlayerForm from './components/PlayerForm';\nimport Footer from './components/Footer';\nimport { MAX_PLAYERS, COLOR_BANK } from './constants';\n\n// TODO:\n// - theme (better styles)\n// - animation\n\nconst useStyles = makeStyles((theme) => ({\n    titleContainer: {\n      textAlign: 'center',\n      position: 'relative',\n      top: '100px'\n    },\n    container: {\n      height: '100%',\n      position: 'relative',\n      minWidth: '360px'\n    }\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [players, setPlayers] = useState([]);\n  const [addAction, setAddAction] = useState(false);\n  const [name, setName] = useState('');\n  const [score, setScore] = useState(0);\n  const [newScore, setNewScore] = useState('');\n  const [activeId, setActiveId] = useState(0);\n  const [timeoutId, setTimeoutId] = useState(undefined);\n  const [colorBank, setColorBank] = useState([...COLOR_BANK]);\n  const TIMEOUT = 750;\n\n  const cleanInputs = () => {\n    setName('');\n    setScore(0);\n  }\n\n  const setPlayerColor = () => {\n    let color_bank = [...colorBank];\n    const colorIndex = Math.floor(Math.random() * color_bank.length);\n    const color = color_bank[colorIndex];\n    color_bank.splice(colorIndex, 1);\n    setColorBank(color_bank);\n    return color;\n  };\n\n  const addPlayer = () => {\n    if (players.length < MAX_PLAYERS) {\n      setActiveId(0);\n      setAddAction(true);\n    }\n  }\n\n  const savePlayer = () => {\n    setAddAction(false);\n    const temp = name.trim();\n    if (temp.length === 0) {\n      cleanInputs();\n      return\n    }\n    const newPlayer = {\n      id: players.length +1,\n      name: name,\n      score: score,\n      color: setPlayerColor(),\n    };\n    setPlayers([...players, newPlayer])\n    cleanInputs();\n  }\n\n  const activateScoreInput = (player) => {\n    setActiveId(player.id);\n  }\n\n  const updateScore = (e) => {\n    setNewScore(e.target.value);\n  }\n\n  const deletePlayer = (player) => {\n    const updatedPlayers = players.filter(p => \n      p.id !== player.id\n    )\n    setPlayers(updatedPlayers);\n  }\n\n  const keyUp = () => {\n    if (timeoutId !== undefined) {\n      clearTimeout(timeoutId)\n    }\n    const scoreToInt = parseInt(newScore);\n    let id = setTimeout(() => {\n      setTimeoutId(undefined);\n      const updatedPlayers = players.map(p => \n        p.id === activeId ? \n          { \n            ...p,\n            score: (parseInt(p.score) + (isNaN(scoreToInt) ? 0 : scoreToInt)) }\n          : p\n      );\n      setPlayers(updatedPlayers);\n      setActiveId(0);\n      setNewScore('');\n    }, TIMEOUT);\n    setTimeoutId(id)\n  }\n\n  const clearBoard = () => {\n    setColorBank([...COLOR_BANK]);\n    setActiveId(0);\n    setPlayers([]);\n  }\n\n  const resetScores = () => {\n    const resetPlayerScores = players.map(p => {\n      return {\n        ...p,\n        score: 0\n      }\n    });\n    setPlayers(resetPlayerScores);\n  }\n\n  return (\n    <div>\n      <Header />\n      <Grid\n        container\n        direction=\"column\"\n        justifyContent=\"center\"\n        alignItems=\"stretch\"\n        className={classes.container}\n      >\n        {!addAction && (\n          <React.Fragment>\n            {players.length === 0 && (\n              <Grid item className={classes.titleContainer}>\n                <h2>Begin by adding players!</h2>\n              </Grid>\n            )}\n            <PlayerList\n              players={players}\n              activeId={activeId}\n              activateScoreInput={activateScoreInput}\n              keyUp={keyUp}\n              updateScore={updateScore}\n              newScore={newScore}\n              deletePlayer={deletePlayer}\n            />\n          </React.Fragment>\n        )}\n        {addAction && (\n          <PlayerForm\n            name={name}\n            setName={setName}\n            setScore={setScore}\n            savePlayer={savePlayer}\n          />\n        )}\n      </Grid>\n      <Footer\n        addPlayer={addPlayer}\n        addAction={addAction}\n        playerCount={players.length}\n        clearBoard={clearBoard}\n        resetScores={resetScores}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\nimport './index.css';\nimport theme from './theme';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}