{"version":3,"sources":["theme.js","components/Header.js","hooks/usePrevious.js","components/AnimateList.js","components/Player.js","components/PlayerList.js","components/Button.js","constants.js","components/PlayerForm.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["theme","createTheme","palette","primary","main","secondary","text","disabled","action","typography","fontFamily","join","button","letterSpacing","responsiveFontSizes","useStyles","makeStyles","root","flexGrow","title","textAlign","padding","spacing","color","fontWeight","textTransform","Header","classes","Grid","item","className","AppBar","position","Typography","variant","usePrevious","value","prevChildrenRef","useRef","useEffect","current","calculateBoundingBoxes","children","boundingBoxes","React","Children","forEach","child","domNode","ref","nodeBoundingBox","getBoundingClientRect","key","AnimateList","useState","boundingBox","setBoundingBox","prevBoundingBox","setPrevBoundingBox","prevChildren","useLayoutEffect","newBoundingBox","Object","keys","length","firstBox","lastBox","changeInY","top","window","requestAnimationFrame","style","transform","transition","err","console","log","error","listContainer","paddingBottom","itemContainer","paddingTop","listItem","backgroundColor","border","paddingLeft","borderRadius","minHeight","textContainer","nameContainer","display","width","input","maxWidth","scoreContainer","marginLeft","Player","forwardRef","player","activeId","newScore","keyUp","updateScore","activateScoreInput","deletePlayer","xs","md","List","ListItem","ListItemIcon","onClick","ListItemText","name","id","score","TextField","type","autoFocus","onKeyUp","onChange","e","size","InputProps","scoreDisplay","PlayerList","players","map","createRef","marginTop","marginBottom","minWidth","breakpoints","down","CustomButton","fullWidth","elevated","Button","disableElevation","COLOR_BANK","container","margin","lengthDisplay","right","PlayerForm","setName","setScore","savePlayer","label","inputProps","maxLength","target","footer","bottom","buttonContainer","Footer","addAction","addPlayer","playerCount","clearBoard","resetScores","Toolbar","Fragment","titleContainer","height","App","setPlayers","setAddAction","setNewScore","setActiveId","undefined","timeoutId","setTimeoutId","colorBank","setColorBank","cleanInputs","setPlayerColor","color_bank","colorIndex","Math","floor","random","splice","sortPlayersByScore","newScores","sortedPlayers","sort","a","b","direction","justifyContent","alignItems","clearTimeout","scoreToInt","parseInt","setTimeout","updatedPlayers","p","isNaN","filter","trim","newPlayer","resetPlayerScores","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.5cd2a2ef.chunk.js","sourcesContent":["import { createTheme, responsiveFontSizes } from '@material-ui/core/styles';\n\n// default theme\n// https://mui.com/customization/default-theme/#heading-explore\n\nlet theme = createTheme({\n    palette: {\n        primary: {\n            main: '#00acc1',\n        },\n        secondary: {\n            main: '#fff',\n        },\n        text: {\n            // primary: '#fff'\n            disabled: '#757575'\n        },\n        action: {\n        }\n    },\n    typography: {\n        fontFamily: ['sans-serif'].join(','),\n        button: {\n            letterSpacing: '0.09rem',\n        },\n    },\n});\n\nexport default responsiveFontSizes(theme);","import { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    title: {\n        textAlign: 'center',\n        padding: theme.spacing(2),\n        color: '#fff',\n        fontWeight: 'bold',\n        letterSpacing: '0.2rem',\n        textTransform: 'uppercase'\n    }\n}))\n\nfunction Header() {\n    const classes = useStyles();\n\n    return (\n        <Grid item className={classes.root}>\n            <AppBar position=\"fixed\">\n                <Typography variant=\"h2\" className={classes.title}>\n                    Scoreboard\n                </Typography>\n            </AppBar>\n        </Grid>\n    )\n}\n\nexport default Header;","import { useEffect, useRef } from \"react\";\n\nconst usePrevious = value => {\n    const prevChildrenRef = useRef();\n\n    useEffect(() => {\n        prevChildrenRef.current = value;\n    }, [value]);\n\n    return prevChildrenRef.current;\n};\n\nexport default usePrevious;","// from: https://itnext.io/animating-list-reordering-with-react-hooks-aca5e7eeafba\n\nimport React, { useEffect, useLayoutEffect, useState } from 'react';\nimport usePrevious from '../hooks/usePrevious';\n\nconst calculateBoundingBoxes = children => {\n    const boundingBoxes = {};\n\n    React.Children.forEach(children, child => {\n        const domNode = child.ref.current;\n        if (domNode) {\n            const nodeBoundingBox = domNode.getBoundingClientRect();\n\n            boundingBoxes[child.key] = nodeBoundingBox;\n        }\n    });\n\n    return boundingBoxes;\n}\n\nconst AnimateList = ({children}) => {\n    const [boundingBox, setBoundingBox] = useState({});\n    const [prevBoundingBox, setPrevBoundingBox] = useState({});\n    const prevChildren = usePrevious(children);\n\n    useLayoutEffect(() => {\n        const newBoundingBox = calculateBoundingBoxes(children);\n        setBoundingBox(newBoundingBox);\n    }, [children]);\n\n    useLayoutEffect(() => {\n        const prevBoundingBox = calculateBoundingBoxes(prevChildren);\n        setPrevBoundingBox(prevBoundingBox);\n    }, [prevChildren]);\n    \n    useEffect(() => {\n        try {\n            const hasPrevBoundingBox = Object.keys(prevBoundingBox).length;\n            \n            if (hasPrevBoundingBox) {\n                React.Children.forEach(children, child => {\n                    const domNode = child.ref.current;\n                    const firstBox = prevBoundingBox[child.key];\n                    const lastBox = boundingBox[child.key];\n\n                    const changeInY = firstBox.top - lastBox.top;\n\n                    if (changeInY) {\n                        window.requestAnimationFrame(() => {\n                            domNode.style.transform = `translateY(${changeInY}px)`;\n                            domNode.style.transition = \"transform 0s\";\n\n                            window.requestAnimationFrame(() => {\n                                domNode.style.transform = \"\";\n                                domNode.style.transition = \"transform 500ms\";\n                            })\n                        });\n                    }\n                });\n            }\n        } catch (err) {\n            console.log('err')\n            console.error(err);\n        }\n        \n\n        \n    }, [boundingBox, prevBoundingBox, children]);\n    \n\n    return children;\n};\n\nexport default AnimateList;","import React, { forwardRef } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport DeleteSharpIcon from '@material-ui/icons/DeleteSharp';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n    listContainer: {\n        position: 'relative',\n        paddingBottom: '100px',\n        top: '100px'\n    },\n    itemContainer: {\n        textAlign: 'center',\n        padding: theme.spacing(2),\n        paddingBottom: theme.spacing(1),\n        paddingTop: theme.spacing(1),\n        position: 'relative'\n    },\n    listItem: {\n        backgroundColor: '#fff',\n        border: '3px solid',\n        padding: theme.spacing(1),\n        paddingLeft: theme.spacing(4),\n        borderRadius: '5px',\n        minHeight: '60px',\n        fontWeight: 'bold',\n    },\n    textContainer: {\n        minHeight: '40px',\n        padding: '8px 0'\n    },\n    nameContainer: {\n        display: 'inline-block',\n        width: '90px'\n    },\n    input: {\n        padding: '2px 2px',\n        maxWidth: '100px'\n    },\n    scoreContainer: {\n        padding: '10px',\n        marginLeft: '20px',\n        minHeight: '40px',\n    }\n}));\n\nconst Player = forwardRef(({player, activeId, newScore, keyUp, updateScore, activateScoreInput, deletePlayer}, ref) => {\n    const classes = useStyles();\n\n    const scoreDisplay = (player) => {\n        if (activeId === player.id) {\n            return (\n                <span className={classes.scoreContainer}>\n                    {player.score} + \n                    <span>\n                        <TextField\n                            id=\"newscore\"\n                            type=\"number\"\n                            autoFocus\n                            value={newScore}\n                            onKeyUp={() => keyUp()}\n                            onChange={(e) => updateScore(e)}\n                            size=\"small\"\n                            InputProps={{\n                                classes: {\n                                    input: classes.input\n                                }\n                            }}\n                        />\n                    </span>\n                </span>\n            )\n        }\n        return <span className={classes.scoreContainer} onClick={() => activateScoreInput(player)}>{player.score}</span>\n    }\n    \n    return (\n        <Grid item xs={12} md={12} key={player.id} ref={ref}>\n            <List className={classes.itemContainer}>\n                <ListItem className={classes.listItem} style={{ 'borderColor': player.color}}>\n                    <ListItemIcon>\n                        <DeleteSharpIcon onClick={() => deletePlayer(player)} />\n                    </ListItemIcon>\n                    <ListItemText className={classes.textContainer}>\n                        <span className={classes.nameContainer}>\n                            {player.name}\n                        </span>\n                        {scoreDisplay(player)}\n                    </ListItemText>\n                </ListItem>\n            </List>\n        </Grid>\n    );\n})\n\nexport default Player;","import { createRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport AnimateList from './AnimateList';\nimport Player from './Player'\n\nconst useStyles = makeStyles((theme) => ({\n    listContainer: {\n        position: 'relative',\n        paddingBottom: '100px',\n        top: '100px'\n    },\n    itemContainer: {\n        textAlign: 'center',\n        padding: theme.spacing(2),\n        paddingBottom: theme.spacing(1),\n        paddingTop: theme.spacing(1),\n        position: 'relative'\n    },\n    listItem: {\n        backgroundColor: '#fff',\n        border: '3px solid',\n        padding: theme.spacing(1),\n        paddingLeft: theme.spacing(4),\n        borderRadius: '5px',\n        minHeight: '60px',\n        fontWeight: 'bold',\n    },\n    textContainer: {\n        minHeight: '40px',\n        padding: '8px 0'\n    },\n    nameContainer: {\n        display: 'inline-block',\n        width: '90px'\n    },\n    input: {\n        padding: '2px 2px',\n        maxWidth: '100px'\n    },\n    scoreContainer: {\n        padding: '10px',\n        marginLeft: '20px',\n        minHeight: '40px',\n    }\n}));\n\nfunction PlayerList({players, activeId, activateScoreInput, keyUp, deletePlayer, updateScore, newScore}) {\n    const classes = useStyles();\n\n    return (\n        <Grid item xs={12} md={12}\n            className={classes.listContainer}\n        >\n            <AnimateList>\n                {players.map(player => (\n                    <Player\n                        key={player.id}\n                        player={player}\n                        activeId={activeId}\n                        activateScoreInput={activateScoreInput}\n                        keyUp={keyUp}\n                        deletePlayer={deletePlayer}\n                        updateScore={updateScore}\n                        newScore={newScore}\n                        ref={createRef()}\n                    />\n                ))}\n            </AnimateList>\n        </Grid>\n    )\n}\n\nexport default PlayerList;","import { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n        minHeight: '50px',\n        minWidth: '50px',\n        color: '#fff',\n        fontWeight: 'bold',\n        borderRadius: '0',\n        [theme.breakpoints.down('390')]: {\n            minWidth: '60px',\n        },\n    }\n}));\n\nfunction CustomButton({title, color=\"primary\", onClick, variant, fullWidth=false, elevated = true, disabled = false}) {\n    const classes = useStyles();\n\n    return (\n        <Button\n            variant={variant}\n            disableElevation={!elevated}\n            color={color}\n            style={{\n                color: color === 'secondary' ? '#fff' : '#004750'\n            }}\n            onClick={onClick}\n            className={classes.button}\n            fullWidth\n            disabled={disabled}\n        >\n            {title}\n        </Button>\n    )\n}\n\nexport default CustomButton;","export const MAX_PLAYERS = 12;\nexport const MAX_NAME_LENGTH = 12;\nexport const COLOR_BANK = [\n    '#060075',\n    '#007540',\n    '#752200',\n    '#750175',\n    '#0191B8',\n    '#B80000',\n    '#F59C00',\n    '#F500A0',\n    '#91D0F5',\n    '#F5D825',\n    '#F59292',\n    '#00F5C7'\n];","import { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport CustomButton from './Button';\n\nimport { MAX_NAME_LENGTH } from '../constants';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        width: '80%',\n        margin: 'auto',\n        position:'relative',\n        top:'100px',\n        padding: theme.spacing(2),\n        \"& *\": {\n            margin: theme.spacing(1),\n        }\n    },\n    lengthDisplay: {\n        position: 'relative',\n        right: '0',\n        textAlign: 'end',\n        margin: '0px',\n    }\n}));\n\nfunction PlayerForm({name, setName, setScore, savePlayer}) {\n    const classes = useStyles();\n    \n    return (\n        <Grid item className={classes.container}>\n            <TextField\n                id=\"player-name\"\n                label=\"Name\"\n                type=\"text\"\n                fullWidth\n                inputProps={{\n                    maxLength: MAX_NAME_LENGTH\n                }}\n                onChange={e => setName(e.target.value)}\n                style={{\n                    marginBottom: '2px'\n                }}\n            />\n            <div className={classes.lengthDisplay}>\n                {MAX_NAME_LENGTH - name.length}\n            </div>\n            <TextField\n                id=\"player-score\"\n                label=\"Initial score\"\n                type=\"number\"\n                fullWidth\n                onChange={e => setScore(e.target.value)}\n            />\n            <CustomButton\n                variant=\"outlined\"\n                disableElevation\n                onClick={savePlayer}\n                title={name.length === 0 ? 'Cancel' : 'Save'}\n            />\n        </Grid>\n    )\n}\n\nexport default PlayerForm;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport CustomButton from './Button';\nimport { MAX_PLAYERS } from '../constants'\n\nconst useStyles = makeStyles((theme) => ({\n    footer: {\n        top: 'auto',\n        bottom: 0,\n        padding: theme.spacing(2),\n        [theme.breakpoints.down('321')]: {\n            padding: theme.spacing(1),\n        },\n        minHeight: '100px'\n    },\n    buttonContainer: {\n        \"& button\": {\n            margin: theme.spacing(1),\n        }\n    }\n}));\n\nfunction Footer({addAction, addPlayer, playerCount, clearBoard, resetScores}) {\n    const classes = useStyles();\n\n    return (\n        <AppBar position=\"fixed\" className={classes.footer}>\n            <Toolbar className={classes.buttonContainer} style={playerCount > 0 ? { margin: 'auto'} : {}}>\n                {(playerCount > 0 && !addAction) && (\n                    <React.Fragment>\n                        <CustomButton\n                            variant=\"outlined\"\n                            onClick={clearBoard}\n                            title=\"Clear board\"\n                            color=\"secondary\"\n                        />\n                        <CustomButton\n                            variant=\"outlined\"\n                            color=\"secondary\"\n                            onClick={resetScores}\n                            title=\"Reset scores\"\n                        />\n                    </React.Fragment>\n                )}\n                {!addAction && (\n                    <CustomButton\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        onClick={addPlayer}\n                        title=\"Add player\"\n                        disabled={playerCount === MAX_PLAYERS}\n                        fullWidth={playerCount === 0}\n                    />\n                )}\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default Footer;","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport './App.css';\nimport Header from './components/Header';\nimport PlayerList from './components/PlayerList';\nimport PlayerForm from './components/PlayerForm';\nimport Footer from './components/Footer';\nimport { MAX_PLAYERS, COLOR_BANK } from './constants';\n\n// TODO:\n// - theme (better styles)\n// - animation\n\nconst useStyles = makeStyles((theme) => ({\n    titleContainer: {\n      textAlign: 'center',\n      position: 'relative',\n      top: '100px'\n    },\n    container: {\n      height: '100%',\n      position: 'relative',\n      minWidth: '360px'\n    }\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [players, setPlayers] = useState([]);\n  const [addAction, setAddAction] = useState(false);\n  const [name, setName] = useState('');\n  const [score, setScore] = useState(0);\n  const [newScore, setNewScore] = useState('');\n  const [activeId, setActiveId] = useState(0);\n  const [timeoutId, setTimeoutId] = useState(undefined);\n  const [colorBank, setColorBank] = useState([...COLOR_BANK]);\n  const TIMEOUT = 750;\n\n  const cleanInputs = () => {\n    setName('');\n    setScore(0);\n  }\n\n  const setPlayerColor = () => {\n    let color_bank = [...colorBank];\n    const colorIndex = Math.floor(Math.random() * color_bank.length);\n    const color = color_bank[colorIndex];\n    color_bank.splice(colorIndex, 1);\n    setColorBank(color_bank);\n    return color;\n  };\n\n  const addPlayer = () => {\n    if (players.length < MAX_PLAYERS) {\n      setActiveId(0);\n      setAddAction(true);\n    }\n  }\n\n  const sortPlayersByScore = (newScores) => {\n    const sortedPlayers = newScores.sort((a, b) => {\n      return b.score - a.score\n    })\n    setPlayers(sortedPlayers);\n  }\n\n  const savePlayer = () => {\n    setAddAction(false);\n    const temp = name.trim();\n    if (temp.length === 0) {\n      cleanInputs();\n      return\n    }\n    const newPlayer = {\n      id: players.length +1,\n      name: name,\n      score: score,\n      color: setPlayerColor(),\n    };\n    if (score > 0) {\n      sortPlayersByScore([...players, newPlayer]);\n    } else {\n      setPlayers([...players, newPlayer]);\n    }\n    cleanInputs();\n  }\n\n  const activateScoreInput = (player) => {\n    setActiveId(player.id);\n  }\n\n  const updateScore = (e) => {\n    setNewScore(e.target.value);\n  }\n\n  const deletePlayer = (player) => {\n    const updatedPlayers = players.filter(p => \n      p.id !== player.id\n    )\n    setPlayers(updatedPlayers);\n  }\n\n  const keyUp = () => {\n    if (timeoutId !== undefined) {\n      clearTimeout(timeoutId)\n    }\n    const scoreToInt = parseInt(newScore);\n    let id = setTimeout(() => {\n      setTimeoutId(undefined);\n      const updatedPlayers = players.map(p => \n        p.id === activeId ? \n          { \n            ...p,\n            score: (parseInt(p.score) + (isNaN(scoreToInt) ? 0 : scoreToInt)) }\n          : p\n      );\n      sortPlayersByScore(updatedPlayers);\n      setActiveId(0);\n      setNewScore('');\n    }, TIMEOUT);\n    setTimeoutId(id)\n  }\n\n  const clearBoard = () => {\n    setColorBank([...COLOR_BANK]);\n    setActiveId(0);\n    setPlayers([]);\n  }\n\n  const resetScores = () => {\n    const resetPlayerScores = players.map(p => {\n      return {\n        ...p,\n        score: 0\n      }\n    });\n    setPlayers(resetPlayerScores);\n  }\n\n  return (\n    <div>\n      <Header />\n      <Grid\n        container\n        direction=\"column\"\n        justifyContent=\"center\"\n        alignItems=\"stretch\"\n        className={classes.container}\n      >\n        {!addAction && (\n          <React.Fragment>\n            {players.length === 0 && (\n              <Grid item className={classes.titleContainer}>\n                <h2>Begin by adding players!</h2>\n              </Grid>\n            )}\n            <PlayerList\n              players={players}\n              activeId={activeId}\n              activateScoreInput={activateScoreInput}\n              keyUp={keyUp}\n              updateScore={updateScore}\n              newScore={newScore}\n              deletePlayer={deletePlayer}\n            />\n          </React.Fragment>\n        )}\n        {addAction && (\n          <PlayerForm\n            name={name}\n            setName={setName}\n            setScore={setScore}\n            savePlayer={savePlayer}\n          />\n        )}\n      </Grid>\n      <Footer\n        addPlayer={addPlayer}\n        addAction={addAction}\n        playerCount={players.length}\n        clearBoard={clearBoard}\n        resetScores={resetScores}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\nimport './index.css';\nimport theme from './theme';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}