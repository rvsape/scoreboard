{"version":3,"sources":["theme.js","components/Header.js","components/PlayerList.js","components/Button.js","components/PlayerForm.js","constants.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["theme","createTheme","palette","primary","main","secondary","text","disabled","action","typography","fontFamily","join","button","letterSpacing","responsiveFontSizes","useStyles","makeStyles","root","flexGrow","title","textAlign","padding","spacing","color","fontWeight","textTransform","Header","classes","Grid","item","className","AppBar","position","Typography","variant","itemContainer","paddingBottom","paddingTop","listItem","backgroundColor","border","paddingLeft","borderRadius","minHeight","PlayerList","players","activeId","activateScoreInput","keyUp","deletePlayer","updateScore","newScore","scoreDisplay","player","id","style","score","TextField","type","value","onKeyUp","onChange","e","size","onClick","xs","md","top","map","List","ListItem","ListItemIcon","ListItemText","name","marginTop","marginBottom","minWidth","breakpoints","down","CustomButton","fullWidth","elevated","Button","disableElevation","container","width","margin","PlayerForm","setName","setScore","savePlayer","label","target","length","COLOR_BANK","footer","bottom","buttonContainer","Footer","addAction","addPlayer","playerCount","clearBoard","Toolbar","titleContainer","App","useState","setPlayers","setAddAction","setNewScore","setActiveId","undefined","timeoutId","setTimeoutId","colorBank","setColorBank","cleanInputs","setPlayerColor","color_bank","colorIndex","Math","floor","random","splice","direction","justifyContent","alignItems","height","Fragment","clearTimeout","scoreToInt","parseInt","setTimeout","updatedPlayers","p","isNaN","filter","trim","newPlayer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.6d3249c7.chunk.js","sourcesContent":["import { createTheme, responsiveFontSizes } from '@material-ui/core/styles';\n\n// default theme\n// https://mui.com/customization/default-theme/#heading-explore\n\nlet theme = createTheme({\n    palette: {\n        primary: {\n            main: '#00acc1',\n        },\n        secondary: {\n            main: '#fff',\n        },\n        text: {\n            // primary: '#fff'\n            disabled: '#757575'\n        },\n        action: {\n        }\n    },\n    typography: {\n        fontFamily: ['sans-serif'].join(','),\n        button: {\n            letterSpacing: '0.09rem',\n        },\n    },\n});\n\nexport default responsiveFontSizes(theme);","import { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    title: {\n        textAlign: 'center',\n        padding: theme.spacing(2),\n        color: '#fff',\n        fontWeight: 'bold',\n        letterSpacing: '0.2rem',\n        textTransform: 'uppercase'\n    }\n}))\n\nfunction Header() {\n    const classes = useStyles();\n\n    return (\n        <Grid item className={classes.root}>\n            <AppBar position=\"fixed\">\n                <Typography variant=\"h2\" className={classes.title}>\n                    Scoreboard\n                </Typography>\n            </AppBar>\n        </Grid>\n    )\n}\n\nexport default Header;","import { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport DeleteSharpIcon from '@material-ui/icons/DeleteSharp';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n    itemContainer: {\n        textAlign: 'center',\n        padding: theme.spacing(2),\n        paddingBottom: theme.spacing(1),\n        paddingTop: theme.spacing(1),\n        position: 'relative'\n    },\n    listItem: {\n        backgroundColor: '#fff',\n        border: '3px solid',\n        padding: theme.spacing(1),\n        paddingLeft: theme.spacing(4),\n        borderRadius: '5px',\n        minHeight: '60px',\n        fontWeight: 'bold',\n    }\n}));\n\nfunction PlayerList({players, activeId, activateScoreInput, keyUp, deletePlayer, updateScore, newScore}) {\n    const classes = useStyles();\n    const scoreDisplay = (player) => {\n        if (activeId === player.id) {\n            return (\n                <span style={{ 'padding': '10px', 'marginLeft': '20px', minHeight: '35px'}}>\n                    {player.score} + \n                    <span>\n                        <TextField\n                            id=\"newscore\"\n                            type=\"number\"\n                            value={newScore}\n                            onKeyUp={() => keyUp()}\n                            onChange={(e) => updateScore(e)}\n                            size=\"small\"\n                        />\n                    </span>\n                </span>\n            )\n        }\n        return <span style={{ 'padding': '10px', 'marginLeft': '20px' }} onClick={() => activateScoreInput(player)}>{player.score}</span>\n    }\n\n    const renderPlayers = () => {\n        return players.map((player) => {\n            return (\n                <Grid item xs={12} md={12} key={player.id}>\n                    <List className={classes.itemContainer}>\n                        <ListItem className={classes.listItem} style={{ 'borderColor': player.color}}>\n                            <ListItemIcon>\n                                <DeleteSharpIcon onClick={() => deletePlayer(player)} />\n                            </ListItemIcon>\n                            <ListItemText style={{ 'minHeight': '35px', padding: '8px 0'  }}>\n                                {player.name}\n                                {scoreDisplay(player)}\n                            </ListItemText>\n                        </ListItem>\n                    </List>\n                </Grid>\n            )\n        });\n    }\n\n    return (\n        <Grid item xs={12} md={12}\n            style={{\n                position: 'relative',\n                paddingBottom: '100px',\n                top: '100px'\n            }}\n        >\n            {renderPlayers()}\n        </Grid>\n    )\n}\n\nexport default PlayerList;","import { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n        minHeight: '50px',\n        minWidth: '160px',\n        color: '#fff',\n        fontWeight: 'bold',\n        borderRadius: '0',\n        [theme.breakpoints.down('390')]: {\n            minWidth: '60px',\n        },\n    }\n}));\n\nfunction CustomButton({title, color=\"primary\", onClick, variant, fullWidth=false, elevated = true, disabled = false}) {\n    const classes = useStyles();\n\n    return (\n        <Button\n            variant={variant}\n            disableElevation={!elevated}\n            color={color}\n            style={{\n                color: color === 'secondary' ? '#fff' : '#004750'\n            }}\n            onClick={onClick}\n            className={classes.button}\n            fullWidth\n            disabled={disabled}\n        >\n            {title}\n        </Button>\n    )\n}\n\nexport default CustomButton;","import { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport CustomButton from './Button';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        width: '80%',\n        margin: 'auto',\n        position:'relative',\n        top:'100px',\n        padding: theme.spacing(2),\n        \"& *\": {\n            margin: theme.spacing(1),\n        }\n    },\n}));\n\nfunction PlayerForm({name, setName, setScore, savePlayer}) {\n    const classes = useStyles();\n\n    return (\n        <Grid item className={classes.container}>\n            <TextField\n                id=\"player-name\"\n                label=\"Name\"\n                type=\"text\"\n                fullWidth\n                onChange={e => setName(e.target.value)}\n            />\n            <TextField\n                id=\"player-score\"\n                label=\"Initial score\"\n                type=\"number\"\n                fullWidth\n                onChange={e => setScore(e.target.value)}\n            />\n            <CustomButton\n                variant=\"outlined\"\n                disableElevation\n                onClick={savePlayer}\n                title={name.length === 0 ? 'Cancel' : 'Save'}\n            />\n        </Grid>\n    )\n}\n\nexport default PlayerForm;","export const MAX_PLAYERS = 12;\nexport const COLOR_BANK = [\n    '#060075',\n    '#007540',\n    '#752200',\n    '#750175',\n    '#0191B8',\n    '#B80000',\n    '#F59C00',\n    '#F500A0',\n    '#91D0F5',\n    '#F5D825',\n    '#F59292',\n    '#00F5C7'\n];","import { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport CustomButton from './Button';\nimport { MAX_PLAYERS } from '../constants'\n\nconst useStyles = makeStyles((theme) => ({\n    footer: {\n        top: 'auto',\n        bottom: 0,\n        padding: theme.spacing(2),\n        [theme.breakpoints.down('321')]: {\n            padding: theme.spacing(1),\n        },\n        minHeight: '100px'\n    },\n    buttonContainer: {\n        \"& button\": {\n            margin: theme.spacing(1),\n        }\n    }\n}));\n\nfunction Footer({addAction, addPlayer, playerCount, clearBoard}) {\n    const classes = useStyles();\n\n    return (\n        <AppBar position=\"fixed\" className={classes.footer}>\n            <Toolbar className={classes.buttonContainer} style={playerCount > 0 ? { margin: 'auto'} : {}}>\n                {(playerCount > 0 && !addAction) && (\n                    <CustomButton\n                        variant=\"outlined\"\n                        onClick={clearBoard}\n                        title=\"Clear board\"\n                        color=\"secondary\"\n                    />\n                )}\n                {!addAction && (\n                    <CustomButton\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        onClick={addPlayer}\n                        title=\"Add player\"\n                        disabled={playerCount === MAX_PLAYERS}\n                        fullWidth={playerCount === 0}\n                    />\n                )}\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default Footer;","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport './App.css';\nimport Header from './components/Header';\nimport PlayerList from './components/PlayerList';\nimport PlayerForm from './components/PlayerForm';\nimport Footer from './components/Footer';\nimport { MAX_PLAYERS, COLOR_BANK } from './constants';\n\n// TODO:\n// - theme (better styles)\n// - animation\n\nconst useStyles = makeStyles((theme) => ({\n    titleContainer: {\n      textAlign: 'center',\n      position: 'relative',\n      top: '100px'\n    }\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [players, setPlayers] = useState([]);\n  const [addAction, setAddAction] = useState(false);\n  const [name, setName] = useState('');\n  const [score, setScore] = useState(0);\n  const [newScore, setNewScore] = useState('');\n  const [activeId, setActiveId] = useState(0);\n  const [timeoutId, setTimeoutId] = useState(undefined);\n  const [colorBank, setColorBank] = useState([...COLOR_BANK]);\n  const TIMEOUT = 750;\n\n  const cleanInputs = () => {\n    setName('');\n    setScore(0);\n  }\n\n  const setPlayerColor = () => {\n    let color_bank = [...colorBank];\n    const colorIndex = Math.floor(Math.random() * color_bank.length);\n    const color = color_bank[colorIndex];\n    color_bank.splice(colorIndex, 1);\n    setColorBank(color_bank);\n    return color;\n  };\n\n  const addPlayer = () => {\n    if (players.length < MAX_PLAYERS) {\n      setAddAction(true);\n    }\n  }\n\n  const savePlayer = () => {\n    setAddAction(false);\n    const temp = name.trim();\n    if (temp.length === 0) {\n      cleanInputs();\n      return\n    }\n    const newPlayer = {\n      id: players.length +1,\n      name: name,\n      score: score,\n      color: setPlayerColor(),\n    };\n    setPlayers([...players, newPlayer])\n    cleanInputs();\n  }\n\n  const activateScoreInput = (player) => {\n    setActiveId(player.id);\n  }\n\n  const updateScore = (e) => {\n    setNewScore(e.target.value);\n  }\n\n  const deletePlayer = (player) => {\n    const updatedPlayers = players.filter(p => \n      p.id !== player.id\n    )\n    setPlayers(updatedPlayers);\n  }\n\n  const keyUp = () => {\n    if (timeoutId !== undefined) {\n      clearTimeout(timeoutId)\n    }\n    const scoreToInt = parseInt(newScore);\n    let id = setTimeout(() => {\n      setTimeoutId(undefined);\n      const updatedPlayers = players.map(p => \n        p.id === activeId ? \n          { \n            ...p,\n            score: (parseInt(p.score) + (isNaN(scoreToInt) ? 0 : scoreToInt)) }\n          : p\n      );\n      setPlayers(updatedPlayers);\n      setActiveId(0);\n      setNewScore('');\n    }, TIMEOUT);\n    setTimeoutId(id)\n  }\n\n  const clearBoard = () => {\n    setColorBank([...COLOR_BANK]);\n    setPlayers([]);\n  }\n\n  return (\n    <div>\n      <Header />\n      <Grid\n        container\n        direction=\"column\"\n        justifyContent=\"center\"\n        alignItems=\"stretch\"\n        style={{\n          height: '100%',\n          position: 'relative',\n        }}\n      >\n        {!addAction && (\n          <React.Fragment>\n            {players.length === 0 && (\n              <Grid item className={classes.titleContainer}>\n                <h2>Begin by adding players!</h2>\n              </Grid>\n            )}\n            <PlayerList\n              players={players}\n              activeId={activeId}\n              activateScoreInput={activateScoreInput}\n              keyUp={keyUp}\n              updateScore={updateScore}\n              newScore={newScore}\n              deletePlayer={deletePlayer}\n            />\n          </React.Fragment>\n        )}\n        {addAction && (\n          <PlayerForm\n            name={name}\n            setName={setName}\n            setScore={setScore}\n            savePlayer={savePlayer}\n          />\n        )}\n      </Grid>\n      <Footer\n        addPlayer={addPlayer}\n        addAction={addAction}\n        playerCount={players.length}\n        clearBoard={clearBoard}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\nimport './index.css';\nimport theme from './theme';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}